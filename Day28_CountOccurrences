//Linear Search
class Solution {
    int countFreq(int[] arr, int target) {
        // code here
        int ans = 0;
        
        for(int i=0;i<arr.length;i++)
        {
            if(arr[i] == target)
            {
                ans +=1;
            }
        }
        return ans;
    }
}

//Binary Search------------------------------------------------------------------------
class Solution {
    int upper(int[] arr, int target)
    {
        int ans = arr.length;
        int start =0;
        int end = arr.length-1;;
        
        while(start<=end)
        {
            int mid = start + (end-start)/2;
            if(arr[mid]>target)
            {
                ans=mid;
                end = mid-1;
            }
            else
            {
                start = mid+1;
            }
        }
        return ans;
    }
    int lower(int[] arr, int target)
    {
        int ans = arr.length;
        int start =0;
        int end = arr.length-1;
        
        while(start<=end)
        {
            int mid = start + (end-start)/2;
            if(arr[mid]>=target)
            {
                ans = mid;
                end = mid-1;
            }
            else
            {
                start = mid+1;
            }
        }
        return ans;
    }
    int countFreq(int[] arr, int target) {
        // code here
        return upper(arr,target)-lower(arr,target);
        
    }
}
